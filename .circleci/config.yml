version: 2

defaults: &defaults
  working_directory: ~/plugin
  docker:
    - image: egis/build-slave

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: build-cache-key
          command: |
            mkdir ci-artifacts
            cat package.json | jq '.dependencies, .devDependencies' > cache-key.txt
            echo ${NODE_VERSION} >> cache-key.txt
            cp cache-key.txt ci-artifacts/
      - restore_cache:
          key: dependency-cache-{{ checksum "cache-key.txt" }}
      - run:
          name: initialize
          command: |
            npm run install-ci-tools
            ci-tools-upgrade-node
            ci-tools-upgrade-yarn
      - run:
          name: pre-deps
          command: |
            sudo chmod -R a+w /usr/local
            yarn config set cache-folder ~/.cache/yarn
      - run:
          name: install-deps
          command: |
            ci-tools-install-gradle
            gradle-2.7/bin/gradle setup
      - run:
          name: build
          command: |
            gradle-2.7/bin/gradle jar --daemon
            gradle-2.7/bin/gradle upgrade --daemon
            gradle-2.7/bin/gradle install --daemon
      - run:
          name: check build
          command: if [ ! -e build/*.js ]; then exit 1; fi
      - save_cache:
          key: dependency-cache-{{ checksum "cache-key.txt" }}
          paths:
            - node_modules
            - gradle-2.7
            - ~/.cache/yarn
      - persist_to_workspace:
          root: ~/plugin
          paths:
            - build
            - package.json
            - uat
      - run:
          name: collect-artifacts
          command: |
            find ./build/distributions/ -type f | xargs -i{} cp {} ci-artifacts/
            OUT_DIR=ci-artifacts yarn ci-tools-collect-deps-versions
          when: always
      - store_artifacts:
          path: ci-artifacts/

  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/plugin
      - run:
          name: deploy
          command: |
            source uat && pt deploy build/distributions/*-install.zip
            source uat && pt deploy build/distributions/*-upgrade.zip


workflows:
  version: 2
  main:
    jobs:
      - build:
          context: org-global
      - deploy:
          context: org-global
          filters:
            branches:
              only: master
          requires:
            - build
