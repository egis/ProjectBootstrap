buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {

        classpath "com.egis:gradle-build:4.0.62"
        classpath 'org.ajoberstar:grgit:1.1.0'
        classpath "jp.classmethod.aws:gradle-aws-plugin:0.+"
    }
}

ext {
    pkg = '{{cookiecutter.name}}'
    libBucket = 'papertrail'
    libPrefix = "libs/"
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: "com.egis.gradle"

dependencies {
    repositories {
        jcenter()
    }
    //testCompile 'org.testng:testng:6.9.10'
}

test() {
    useTestNG {
        excludeGroups 'broken'
    }
}

task deployUpgrade(dependsOn: upgrade ){
    group "PaperTrail"
    description "Deploys Upgrade"

    doLast{
        exec {
            workingDir "."
            executable 'echo'
            args "\nDeploying File: ${buildDir}/distributions/${project.name}-upgrade.zip\nTo: ${environment.get('PT_API')}\n"
        }
        exec {
            workingDir "."
            executable 'pt'
            args "deploy","${buildDir}/distributions/${project.name}-upgrade.zip"


        }
        exec {
            workingDir "."
            executable 'echo'
            args "\nDeployed File: ${buildDir}/distributions/${project.name}-upgrade.zip\n"
        }
    }
}

task deployInstall(dependsOn: install ){
    group "PaperTrail"
    description "Deploys Upgrade"

    doLast{
        exec {
            workingDir "."
            executable 'echo'
            args "\nDeploying File: ${buildDir}/distributions/${project.name}-install.zip\nTo: ${environment.get('PT_API')}\n"
        }
        exec {
            workingDir "."
            executable 'pt'
            args "deploy","${buildDir}/distributions/${project.name}-install.zip"
        }

        exec {
            workingDir "."
            executable 'echo'
            args "\nDeployed File: ${buildDir}/distributions/${project.name}-install.zip\n"
        }
    }
}

task restartDocker(){
    group "PaperTrail"
    description "Restarts Docker"

    doLast{

        exec {
            workingDir "."
            executable 'docker'
            args "stop" ,  dockerContainerName
        }
        exec {
            workingDir "."
            executable 'docker'
            args "start" ,  dockerContainerName
        }
    }
}

task jarDance( dependsOn: deployUpgrade){
    group "PaperTrail"
    description "Deploys Jar to Docker"

    doFirst{
        exec {
            workingDir buildDir
            executable 'docker'
            args "cp" , "./libs/${project.name}.jar", "${dockerContainerName}:/opt/Papertrail/deploy"
        }
    }

    finalizedBy restartDocker
}

task restartPT(){
    group "PaperTrail"
    description "Restarts Papertrail"

    doLast{

        exec {
            workingDir "."
            executable 'pt'
            args "post" ,  'papertrail/restart'
        }
    }
}

task fullDeploy( dependsOn: jarDance){
    group "PaperTrail"
    description "Deploys Everything and restarts PT"

    doFirst{
        exec {
            workingDir "."
            executable 'echo'
            args "\nDeploying File: ${ptPropertyFile}\nTo: ${dockerContainerName}"
        }
        exec {
            workingDir buildDir
            executable 'docker'
            args "cp" , "${ptPropertyFile}", "${dockerContainerName}:/opt/Papertrail/conf"
        }
        exec {
            workingDir "."
            executable 'echo'
            args "\nDeployed Property File"
        }
    }

    finalizedBy restartPT
}

task deployProperties(){
    group "PaperTrail"
    description "Deploys Property File to Docker"

    doFirst{
        exec {
            workingDir "."
            executable 'echo'
            args "\nDeploying File: ${ptPropertyFile}\nTo: ${dockerContainerName}"
        }
        exec {
            workingDir buildDir
            executable 'docker'
            args "cp" , "${ptPropertyFile}", "${dockerContainerName}:/opt/Papertrail/conf"
        }
        exec {
            workingDir "."
            executable 'echo'
            args "\nDeployed Property File"
        }
    }

    finalizedBy restartPT
}


task dockerStop(type: Exec){
    group 'Papertrail'
    description "Stops all docker containers"

    commandLine "sh", "StopDocker.sh"

}

task dockerRun(type: Exec, dependsOn: dockerStop) {
    group "Papertrail"
    description "Runs a Papertrail docker container"
    def version = project.hasProperty('v') ? project.getProperty('v') : 'latest'
    def name = project.hasProperty('n') ? project.getProperty('n') : dockerContainerName
    commandLine "docker", "run", "--name", name, "-d","-v", environment.get('WORK_DIR') + "/work/plugins/:/file_drs", "--expose", "80", "-p", "127.0.0.1:8080:80/tcp", "egis/papertrail:" + version
}

